'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { 
  ChevronLeftIcon, 
  ChevronRightIcon,
  ArrowTrendingUpIcon,
  ArrowTrendingDownIcon,
  MinusIcon,
  FilmIcon,
  HeartIcon as HeartSolid,
  PlusIcon,
  BoltIcon,
  PlayIcon
} from '@heroicons/react/24/solid';
import { Movie } from '@/types/movie';
import { getImageUrl } from '@/lib/utils';

// Comment data interface
interface CommentData {
  id: string;
  user: {
    name: string;
    avatar: string;
    gender: 'male' | 'female';
    badge: 'infinity' | 'none';
  };
  movie: {
    title: string;
    poster: string;
    slug: string;
  };
  content: string;
  upvotes: number;
  downvotes: number;
  replies: number;
  timestamp: string;
}

// Latest comment interface for B√¨nh lu·∫≠n m·ªõi section
interface LatestComment {
  id: string;
  user: {
    name: string;
    avatar: string;
    gender: 'male' | 'female';
    badge: 'infinity' | 'none';
  };
  movie: {
    title: string;
    slug: string;
  };
  content: string;
  timestamp: string;
}

interface UnifiedBottomBlockProps {
  trendingMovies: Array<Movie & { trend: 'up' | 'down' | 'stable' }>;
  favoriteMovies: Array<Movie & { trend: 'up' | 'down' | 'stable' }>;
  hotGenres: Array<{
    id: string;
    name: string;
    movieCount: number;
    thumbnail: string;
    trending: boolean;
    trend: 'up' | 'down' | 'stable';
  }>;
}

const mockComments: CommentData[] = [
  {
    id: '1',
    user: {
      name: 'Nguy·ªÖn Th·ªã M·ªπ Ng·ªçc',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'Giao ∆Ø·ªõc Qu·ª∑ D·ªØ',
      poster: '/placeholder-banner.jpg',
      slug: 'giao-uoc-quy-du',
    },
    content: 'tao thu·ªôc lu√¥n nh·∫°c QC man88 r·ªìi, h√£ng c√≥ c·∫ßn book tao h√°t k ?!',
    upvotes: 17,
    downvotes: 0,
    replies: 2,
    timestamp: '2 gi·ªù tr∆∞·ªõc',
  },
  {
    id: '2',
    user: {
      name: 'Hoa Nguy·ªÖn',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'Giao ∆Ø·ªõc Qu·ª∑ D·ªØ',
      poster: '/placeholder-banner.jpg',
      slug: 'giao-uoc-quy-du',
    },
    content: 'phim hay ho·∫∑c d·ªü do th·∫±ng ƒë·∫°o di·ªÖn , ƒë√£ xem free th√¨ ng·∫≠m m·ªìm m√† xem th√¥i m·∫Øc g√¨ ch·ª≠i 2 =)))))))',
    upvotes: 12,
    downvotes: 0,
    replies: 1,
    timestamp: '3 gi·ªù tr∆∞·ªõc',
  },
  {
    id: '3',
    user: {
      name: 'Duy√™n M·ªπ',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'D·ªØ T·∫•n Tr∆∞·ªùng An',
      poster: '/placeholder-banner.jpg',
      slug: 'du-tan-truong-an',
    },
    content: 'T coi ƒë∆∞·ª£c full r·ªìi h·∫πh·∫π b√™n kia √°, m√† b√¨nh lu·∫≠n kh√¥ng ƒë∆∞·ª£c....n√≥ ƒë·ªÉ k h·ª£p l·ªá, b√™n P h i m h d c',
    upvotes: 0,
    downvotes: 0,
    replies: 6,
    timestamp: '5 gi·ªù tr∆∞·ªõc',
  },
  {
    id: '4',
    user: {
      name: 'Linh ƒê√†o',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'Ng·ª± Tr√π c·ªßa B·∫°o Ch√∫a',
      poster: '/placeholder-banner.jpg',
      slug: 'ngu-tru-cua-bao-chua',
    },
    content: 'b·∫°o ch√∫a g√¨ m√† nh√°t g√°i, ph·∫£i t th√¨ t th·ªã t·∫©m t·ª´ cu·ªëi t·∫≠p 4 l√† h·∫øt phim =))))))))))))))))))',
    upvotes: 12,
    downvotes: 0,
    replies: 1,
    timestamp: '1 ng√†y tr∆∞·ªõc',
  },
  {
    id: '5',
    user: {
      name: 'Mikony.‡≥ÉìÜù',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'Ng·ª± Tr√π c·ªßa B·∫°o Ch√∫a',
      poster: '/placeholder-banner.jpg',
      slug: 'ngu-tru-cua-bao-chua',
    },
    content: 'H√†i vkl n·ªØ 9 c·∫Øn l·∫°i ƒë√£ √°c , gh√©p m·∫•y c√°i sound r·ªìi maya c·∫£nh t∆∞·ªüng t∆∞·ª£ng h√†i ƒëi√™n, coi m√† c·ª© c∆∞·ªùi m√£i =)))))) m·ªõi coi c·ªï tay √°o m√†u ƒë·ªè xong coi n√†y ch·ªØa l√†nh qu·∫Ø um c√≥ khi sau ng∆∞·ª£c',
    upvotes: 6,
    downvotes: 0,
    replies: 0,
    timestamp: '1 ng√†y tr∆∞·ªõc',
  },
  {
    id: '6',
    user: {
      name: 'n·∫•mmmmm',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'none',
    },
    movie: {
      title: 'Gi·∫•c M∆° Ng∆∞·ªùi Lu·∫≠t S∆∞',
      poster: '/placeholder-banner.jpg',
      slug: 'giac-mo-nguoi-luat-su',
    },
    content: 'M√°, b√† v·ª£ c≈© v·∫´n ƒë·ªï l·ªói ng∆∞·ª£c cho na9 ·∫°? Nh√¨n th√¨ t∆∞·ªüng c·∫£nh n√†y b·∫£ l√† n·∫°n nh√¢n ƒë·∫•y nh∆∞ng ko, t·ªânh l√™n mng ∆°i! Na9 l√† ch·ªìng v√† l√† b·ªë ƒë·ª©a b√©, tsao b√† v·ª£ c≈© l·∫°i t∆∞·ªõc ƒëi quy·ªÅn ƒëc bi·∫øt v·ªÅ s·ª± t·ªìn t·∫°i c·ªßa ƒë·ª©a b√© v√† t√¨nh tr·∫°ng c·ªßa ƒë·ª©a b√©?',
    upvotes: 3,
    downvotes: 0,
    replies: 3,
    timestamp: '2 ng√†y tr∆∞·ªõc',
  },
  {
    id: '7',
    user: {
      name: 'Anh Tu·∫•n',
      avatar: '/placeholder-avatar.jpg',
      gender: 'male',
      badge: 'infinity',
    },
    movie: {
      title: 'Th·ª≠ Th√°ch Th·∫ßn Ch·∫øt',
      poster: '/placeholder-banner.jpg',
      slug: 'thu-thach-than-chet',
    },
    content: 'Phim n√†y hay qu√°! Plot twist li√™n t·ª•c, kh√¥ng ƒëo√°n ƒë∆∞·ª£c k·∫øt th√∫c. Di·ªÖn vi√™n ch√≠nh acting r·∫•t t·ªët, nh·∫•t l√† ph·∫ßn th·ªÉ hi·ªán t√¢m l√Ω nh√¢n v·∫≠t.',
    upvotes: 25,
    downvotes: 1,
    replies: 8,
    timestamp: '3 ng√†y tr∆∞·ªõc',
  },
  {
    id: '8',
    user: {
      name: 'Mai Lan',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'none',
    },
    movie: {
      title: 'K·∫ª SƒÉn B√≥ng ƒê√™m',
      poster: '/placeholder-banner.jpg',
      slug: 'ke-san-bong-dem',
    },
    content: 'Cinematography ƒë·∫πp xu·∫•t s·∫Øc! M·ªói frame ƒë·ªÅu nh∆∞ m·ªôt b·ª©c tranh ngh·ªá thu·∫≠t. √Çm nh·∫°c c≈©ng r·∫•t ph√π h·ª£p v·ªõi kh√¥ng kh√≠ u √°m c·ªßa phim.',
    upvotes: 31,
    downvotes: 2,
    replies: 12,
    timestamp: '4 ng√†y tr∆∞·ªõc',
  },
  {
    id: '9',
    user: {
      name: 'Ho√†ng Vi·ªát',
      avatar: '/placeholder-avatar.jpg',
      gender: 'male',
      badge: 'none',
    },
    movie: {
      title: 'Chi·∫øn Binh Galactic',
      poster: '/placeholder-banner.jpg',
      slug: 'chien-binh-galactic',
    },
    content: 'VFX tuy·ªát v·ªùi! Nh·ªØng c·∫£nh chi·∫øn ƒë·∫•u trong kh√¥ng gian l√†m t√¥i n·ªïi da g√†. ƒê√°ng ƒë·ªìng ti·ªÅn b√°t g·∫°o, 10/10 s·∫Ω xem l·∫°i!',
    upvotes: 19,
    downvotes: 0,
    replies: 5,
    timestamp: '5 ng√†y tr∆∞·ªõc',
  },
  {
    id: '10',
    user: {
      name: 'Thanh H∆∞∆°ng',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'T√¨nh Y√™u M√πa Thu',
      poster: '/placeholder-banner.jpg',
      slug: 'tinh-yeu-mua-thu',
    },
    content: 'Rom-com hay nh·∫•t m√πa n√†y! Chemistry gi·ªØa hai di·ªÖn vi√™n ch√≠nh qu√° t·ª± nhi√™n v√† ng·ªçt ng√†o. Kh√≥c v√† c∆∞·ªùi c√πng l√∫c.',
    upvotes: 44,
    downvotes: 3,
    replies: 18,
    timestamp: '1 tu·∫ßn tr∆∞·ªõc',
  },
  {
    id: '11',
    user: {
      name: 'ƒê·ª©c Minh',
      avatar: '/placeholder-avatar.jpg',
      gender: 'male',
      badge: 'none',
    },
    movie: {
      title: 'B√≠ ·∫®n Khu R·ª´ng',
      poster: '/placeholder-banner.jpg',
      slug: 'bi-an-khu-rung',
    },
    content: 'Thriller t√¢m l√Ω hay! CƒÉng th·∫≥ng t·ª´ ƒë·∫ßu ƒë·∫øn cu·ªëi, kh√¥ng c√≥ l√∫c n√†o th·∫£ l·ªèng. K·ªãch b·∫£n ch·∫∑t ch·∫Ω, di·ªÖn xu·∫•t ·ªïn.',
    upvotes: 22,
    downvotes: 1,
    replies: 7,
    timestamp: '1 tu·∫ßn tr∆∞·ªõc',
  },
  {
    id: '12',
    user: {
      name: 'Ng·ªçc Di·ªáp',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'K√Ω ·ª®c ƒê√£ M·∫•t',
      poster: '/placeholder-banner.jpg',
      slug: 'ky-uc-da-mat',
    },
    content: 'Drama s√¢u s·∫Øc v·ªÅ gia ƒë√¨nh. Mang th√¥ng ƒëi·ªáp √Ω nghƒ©a v·ªÅ t√¨nh th√¢n v√† s·ª± tha th·ª©. Khuy√™n m·ªçi ng∆∞·ªùi n√™n xem!',
    upvotes: 38,
    downvotes: 0,
    replies: 15,
    timestamp: '1 tu·∫ßn tr∆∞·ªõc',
  },
  {
    id: '13',
    user: {
      name: 'Trung Ki√™n',
      avatar: '/placeholder-avatar.jpg',
      gender: 'male',
      badge: 'none',
    },
    movie: {
      title: 'Si√™u Anh H√πng M·ªõi',
      poster: '/placeholder-banner.jpg',
      slug: 'sieu-anh-hung-moi',
    },
    content: 'Action packed! Nh·ªØng pha stunts th·ª±c hi·ªán r·∫•t chuy√™n nghi·ªáp. D√π c·ªët truy·ªán h∆°i c≈© nh∆∞ng v·∫´n gi·∫£i tr√≠ t·ªët.',
    upvotes: 28,
    downvotes: 5,
    replies: 11,
    timestamp: '2 tu·∫ßn tr∆∞·ªõc',
  },
  {
    id: '14',
    user: {
      name: 'Kim Oanh',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'none',
    },
    movie: {
      title: 'H·ªçc ƒê∆∞·ªùng ƒê·∫°i Chi·∫øn',
      poster: '/placeholder-banner.jpg',
      slug: 'hoc-duong-dai-chien',
    },
    content: 'Anime adaptation kh√° ·ªïn! Faithful v·ªõi manga g·ªëc, animation m∆∞·ª£t m√†. Fan c·ªßa series s·∫Ω h√†i l√≤ng.',
    upvotes: 33,
    downvotes: 2,
    replies: 9,
    timestamp: '2 tu·∫ßn tr∆∞·ªõc',
  },
  {
    id: '15',
    user: {
      name: 'Quang Huy',
      avatar: '/placeholder-avatar.jpg',
      gender: 'male',
      badge: 'infinity',
    },
    movie: {
      title: 'ƒê·∫ø Ch·∫ø S·ª•p ƒê·ªï',
      poster: '/placeholder-banner.jpg',
      slug: 'de-che-sup-do',
    },
    content: 'Epic historical drama! Production value cao, trang ph·ª•c v√† set design r·∫•t chƒÉm ch√∫t. ƒê√°ng xem ƒë·ªÉ hi·ªÉu l·ªãch s·ª≠.',
    upvotes: 41,
    downvotes: 1,
    replies: 16,
    timestamp: '2 tu·∫ßn tr∆∞·ªõc',
  },
  {
    id: '16',
    user: {
      name: 'Huy·ªÅn Trang',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'none',
    },
    movie: {
      title: 'Cu·ªôc Phi√™u L∆∞u V≈© Tr·ª•',
      poster: '/placeholder-banner.jpg',
      slug: 'cuoc-phieu-luu-vu-tru',
    },
    content: 'Sci-fi tuy·ªát v·ªùi cho c·∫£ gia ƒë√¨nh! Con em t√¥i r·∫•t th√≠ch, graphics ƒë·∫πp m√† n·ªôi dung c≈©ng hay v√† √Ω nghƒ©a.',
    upvotes: 26,
    downvotes: 0,
    replies: 13,
    timestamp: '3 tu·∫ßn tr∆∞·ªõc',
  },
];

// Mock latest comments data
const mockLatestComments: LatestComment[] = [
  {
    id: '1',
    user: {
      name: 'mng',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'none',
    },
    movie: {
      title: 'Th∆∞ K√Ω Kim Sao Th·∫ø?',
      slug: 'thu-ky-kim-sao-the',
    },
    content: 'Kh√∫c na9 h·∫øt h·ªìn nh√¨n m·∫∑t c∆∞ng tht=))',
    timestamp: '1 ph√∫t tr∆∞·ªõc',
  },
  {
    id: '2',
    user: {
      name: 'maow‚úø',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'C√µng Anh M√† Ch·∫°y',
      slug: 'cong-anh-ma-chay',
    },
    content: 'tr ∆°i coi c∆∞·ªùi mu·ªën ch·∫øch =)))))',
    timestamp: '2 ph√∫t tr∆∞·ªõc',
  },
  {
    id: '3',
    user: {
      name: 'Vy Kh√°nh',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'Em L√† M·ªôt N·ª≠a ƒê·ªùi Anh',
      slug: 'em-la-mot-nua-doi-anh',
    },
    content: 'Hayyy m·ªù m·∫∑c d√π coi kh√∫c ƒë·∫ßu hog h·ªâu nh·∫Øm',
    timestamp: '3 ph√∫t tr∆∞·ªõc',
  },
  {
    id: '4',
    user: {
      name: 'Minaaaa',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'none',
    },
    movie: {
      title: 'L·ª±a Ch·ªçn C·ªßa Th√°i T·ª≠',
      slug: 'lua-chon-cua-thai-tu',
    },
    content: 'Bi·∫øt l√† k·∫øt HE m√† xem k·∫øt xong v·∫´n kh√≥cüò≠',
    timestamp: '4 ph√∫t tr∆∞·ªõc',
  },
  {
    id: '5',
    user: {
      name: 'Kdrama',
      avatar: '/placeholder-avatar.jpg',
      gender: 'female',
      badge: 'infinity',
    },
    movie: {
      title: 'T·ª± C·∫©m',
      slug: 'tu-cam',
    },
    content: 'Nh√¨n 2 m·∫π con n√≥ c∆∞·ªùi m√† t mu·ªën t√°t cho m·ªói ƒë·ª©a 1 c√°i',
    timestamp: '5 ph√∫t tr∆∞·ªõc',
  },
];

export function UnifiedBottomBlock({ 
  trendingMovies, 
  favoriteMovies, 
  hotGenres 
}: UnifiedBottomBlockProps) {
  const [currentCommentIndex, setCurrentCommentIndex] = useState(0);
  const [currentLatestCommentIndex, setCurrentLatestCommentIndex] = useState(0);
  const [windowWidth, setWindowWidth] = useState(0);

  // Track window width for responsive
  useEffect(() => {
    const updateWindowWidth = () => {
      setWindowWidth(window.innerWidth);
    };

    // Set initial width
    updateWindowWidth();
    
    // Add event listener
    window.addEventListener('resize', updateWindowWidth);
    
    return () => window.removeEventListener('resize', updateWindowWidth);
  }, []);

  // Auto-slide for latest comments
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentLatestCommentIndex((prev) => (prev + 1) % mockLatestComments.length);
    }, 3000); // Change every 3 seconds

    return () => clearInterval(interval);
  }, []);

  const goToPreviousComment = () => {
    setCurrentCommentIndex((prev) => {
      const newIndex = prev - 1;
      return newIndex < 0 ? mockComments.length - 1 : newIndex;
    });
  };

  const goToNextComment = () => {
    setCurrentCommentIndex((prev) => (prev + 1) % mockComments.length);
  };

  // Responsive calculations
  const getCommentWidth = () => {
    if (windowWidth >= 1024) return 264.2; // lg: desktop
    if (windowWidth >= 768) return 280;    // md: tablet  
    return Math.min(300, windowWidth - 80); // sm: mobile with padding
  };

  const getVisibleComments = () => {
    if (windowWidth >= 1024) return 6; // lg: show 6
    if (windowWidth >= 768) return 3;  // md: show 3
    return 1; // sm: show 1
  };

  const getContainerWidth = () => {
    const comments = getVisibleComments();
    const width = getCommentWidth();
    const gaps = (comments - 1) * 16; // 16px margin between cards
    return `${comments * width + gaps}px`;
  };

  // Calculate scroll distance per comment (including margin)
  const getScrollDistance = () => {
    return getCommentWidth() + 16; // Comment width + 16px margin
  };

  // Helper function to render trend indicator
  const renderTrendIndicator = (trend: 'up' | 'down' | 'stable') => {
    switch (trend) {
      case 'up':
        return <ArrowTrendingUpIcon className="h-4 w-4 text-green-400" />;
      case 'down':
        return <ArrowTrendingDownIcon className="h-4 w-4 text-red-400" />;
      case 'stable':
        return <MinusIcon className="h-4 w-4 text-gray-400" />;
    }
  };

  return (
    <div className="cards-row wide">
      <div className="row-content">
        <div className="comm-wrap" style={{backgroundColor: 'var(--bg-3)'}}>
          
          {/* TOP DISCUSS Section */}
          <div className="top-discuss p-6 relative">
            {/* Navigation positioned visibly but outside comment area */}
            <button 
              type="button" 
              className="sw-button sw-prev absolute left-2 top-1/2 -translate-y-1/2 z-30 p-3 bg-gray-800/90 hover:bg-gray-700 text-white rounded-full transition-all duration-200 shadow-lg border border-gray-600"
              onClick={goToPreviousComment}
              aria-label="Previous comments"
            >
              <ChevronLeftIcon className="h-5 w-5" />
            </button>
            
            <button 
              type="button" 
              className="sw-button sw-next absolute right-2 top-1/2 -translate-y-1/2 z-30 p-3 bg-gray-800/90 hover:bg-gray-700 text-white rounded-full transition-all duration-200 shadow-lg border border-gray-600"
              onClick={goToNextComment}
              aria-label="Next comments"
            >
              <ChevronRightIcon className="h-5 w-5" />
            </button>

            <div className="comm-title line-center mb-8">
              <FilmIcon className="h-6 w-6 text-yellow-400 mr-3" />
              <span className="text-2xl font-bold text-yellow-400">Top b√¨nh lu·∫≠n</span>
            </div>
            
            <div className="td-list px-16">
              <div className="flex items-center justify-center">
                <div id="id-top-discuss" className="top-discuss-wrapper relative" style={{ width: getContainerWidth() }}>
                {/* Swiper Container */}
                <div className="swiper swiper-initialized swiper-horizontal overflow-hidden" style={{ width: getContainerWidth() }}>
                  <div 
                    className="swiper-wrapper flex transition-transform duration-500 ease-in-out"
                    style={{ 
                      transform: `translate3d(-${currentCommentIndex * getScrollDistance()}px, 0px, 0px)` 
                    }}
                  >
                    {mockComments.map((comment, index) => (
                      <div 
                        key={comment.id}
                        className="swiper-slide flex-shrink-0"
                        style={{ 
                          width: `${getCommentWidth()}px`,
                          marginRight: index < mockComments.length - 1 ? '16px' : '0'
                        }}
                        data-swiper-slide-index={index}
                      >
                        <div className="d-item td-d-item relative h-48 rounded-lg overflow-hidden">
                          
                          {/* Background Movie Poster */}
                          <div className="di-poster absolute inset-0 z-0">
                            <Image
                              alt="test"
                              loading="lazy"
                              src={getImageUrl(comment.movie.poster, 'medium')}
                              fill
                              className="object-cover blur-sm opacity-30"
                              sizes="248px"
                            />
                            <div className="absolute inset-0 bg-black/60"></div>
                          </div>

                          {/* Movie Thumbnail - Top Right Corner */}
                          <div className="d-thumb absolute top-2 right-2 z-20">
                            <Link 
                              className="v-thumbnail block"
                              title={comment.movie.title}
                              href={`/phim/${comment.movie.slug}`}
                            >
                              <Image
                                alt="test"
                                loading="lazy"
                                src={getImageUrl(comment.movie.poster, 'small')}
                                width={50}
                                height={65}
                                className="rounded object-cover shadow-lg border-2 border-white/20"
                              />
                            </Link>
                          </div>

                          {/* Main Content - Full Width Layout */}
                          <div className="di-v relative z-10 p-4 h-full flex flex-col pr-16">
                            
                            {/* User Header */}
                            <div className="flex items-start space-x-3 mb-3">
                              <div className="user-avatar flex-shrink-0">
                                <Image 
                                  alt={comment.user.name}
                                  src={comment.user.avatar}
                                  width={40}
                                  height={40}
                                  className="rounded-full object-cover"
                                />
                              </div>
                              <div className="flex-1">
                                <div className="user-name line-center gr-free flex items-center">
                                  <span className="text-white text-sm font-medium mr-2">{comment.user.name}</span>
                                  {comment.user.badge === 'infinity' ? (
                                    <span className="text-blue-400 text-xs">‚àû</span>
                                  ) : (
                                    <>
                                      {comment.user.gender === 'female' && (
                                        <span className="text-pink-400 text-xs">‚ôÄ</span>
                                      )}
                                      {comment.user.gender === 'male' && (
                                        <span className="text-blue-400 text-xs">‚ôÇ</span>
                                      )}
                                    </>
                                  )}
                                </div>
                              </div>
                            </div>

                            {/* Comment Text */}
                            <div className="text text-gray-200 text-sm leading-relaxed mb-auto line-clamp-3">
                              {comment.content}
                            </div>

                            {/* Comment Stats */}
                            <div className="comment-bottom flex items-center space-x-3 text-xs text-gray-400 mt-3">
                              <div className="item item-up flex items-center space-x-1">
                                <span className="text-green-400">‚¨Ü</span>
                                <span>{comment.upvotes}</span>
                              </div>
                              <div className="item item-down flex items-center space-x-1">
                                <span className="text-red-400">‚¨á</span>
                                <span>{comment.downvotes}</span>
                              </div>
                              <div className="item item-rep flex items-center space-x-1">
                                <span>üí¨</span>
                                <span>{comment.replies}</span>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
              </div>
            </div>
          </div>

          {/* IRT Table - Grid Layout BELOW Top Comments */}
          <div className="irt-table grid grid-cols-1 lg:grid-cols-4 gap-6 px-6 pt-0 pb-6">
            
            {/* S√¥i n·ªïi nh·∫•t */}
            <div className="it-col this-01">
              <div className="comm-title line-center mb-4">
                <FilmIcon className="h-5 w-5 text-orange-400 mr-2" />
                <span className="flex-grow-1 text-lg font-bold text-white">S√¥i n·ªïi nh·∫•t</span>
              </div>
              <div className="chart-list space-y-2">
                {trendingMovies.slice(0, 5).map((movie, index) => (
                  <div key={movie.id} className="item flex items-center space-x-3 p-2 rounded hover:bg-gray-800/50 transition-colors">
                    <div className="pos text-white font-bold text-sm w-6">{index + 1}.</div>
                    <div className="dev dev-stand">
                      {renderTrendIndicator(movie.trend)}
                    </div>
                    <div className="v-thumbnail w-8 h-10 flex-shrink-0">
                      <Image
                        alt="test"
                        loading="lazy"
                        src={getImageUrl(movie.poster, 'small')}
                        width={32}
                        height={40}
                        className="rounded object-cover"
                      />
                    </div>
                    <h4 className="name lim-1 flex-1 min-w-0">
                      <Link 
                        title={movie.title}
                        href={`/phim/${movie.slug}`}
                        className="text-white text-sm hover:text-red-400 transition-colors line-clamp-1"
                      >
                        {movie.title}
                      </Link>
                    </h4>
                  </div>
                ))}
                <div className="item-more mt-2">
                  <Link href="/trending" className="small text-gray-400 hover:text-white transition-colors text-sm">
                    Xem th√™m
                  </Link>
                </div>
              </div>
            </div>

            {/* Y√™u th√≠ch nh·∫•t */}
            <div className="it-col this-01">
              <div className="comm-title line-center mb-4">
                <HeartSolid className="h-5 w-5 text-red-400 mr-2" />
                <span className="flex-grow-1 text-lg font-bold text-white">Y√™u th√≠ch nh·∫•t</span>
              </div>
              <div className="chart-list space-y-2">
                {favoriteMovies.slice(0, 5).map((movie, index) => (
                  <div key={movie.id} className="item flex items-center space-x-3 p-2 rounded hover:bg-gray-800/50 transition-colors">
                    <div className="pos text-white font-bold text-sm w-6">{index + 1}.</div>
                    <div className="dev dev-up">
                      {renderTrendIndicator(movie.trend)}
                    </div>
                    <div className="v-thumbnail w-8 h-10 flex-shrink-0">
                      <Image
                        alt="test"
                        loading="lazy"
                        src={getImageUrl(movie.poster, 'small')}
                        width={32}
                        height={40}
                        className="rounded object-cover"
                      />
                    </div>
                    <h4 className="name lim-1 flex-1 min-w-0">
                      <Link 
                        title={movie.title}
                        href={`/phim/${movie.slug}`}
                        className="text-white text-sm hover:text-red-400 transition-colors line-clamp-1"
                      >
                        {movie.title}
                      </Link>
                    </h4>
                  </div>
                ))}
                <div className="item-more mt-2">
                  <Link href="/favorites" className="small text-gray-400 hover:text-white transition-colors text-sm">
                    Xem th√™m
                  </Link>
                </div>
              </div>
            </div>

            {/* Th·ªÉ lo·∫°i Hot */}
            <div className="it-col this-03">
              <div className="comm-title line-center mb-4">
                <PlusIcon className="h-5 w-5 text-yellow-400 mr-2" />
                <span className="flex-grow-1 text-lg font-bold text-white">Th·ªÉ lo·∫°i Hot</span>
              </div>
              <div className="chart-list space-y-2">
                {hotGenres.map((genre, index) => (
                  <div key={genre.id} className="item flex items-center space-x-3 p-2 rounded hover:bg-gray-800/50 transition-colors">
                    <div className="pos text-white font-bold text-sm w-6">{index + 1}.</div>
                    <div className="dev dev-stand">
                      {renderTrendIndicator(genre.trend)}
                    </div>
                    <div className="topic-color w-8 h-6 flex-shrink-0 rounded" style={{backgroundColor: 'rgb(116, 45, 75)'}}>
                      <Link 
                        href={`/the-loai/${genre.id}`}
                        className="w-full h-full rounded text-white text-xs flex items-center justify-center font-medium"
                      >
                        {genre.name.charAt(0)}
                      </Link>
                    </div>
                    <div className="name flex-1 min-w-0">
                      <Link 
                        href={`/the-loai/${genre.id}`}
                        className="text-white text-sm hover:text-yellow-400 transition-colors line-clamp-1"
                      >
                        {genre.name}
                      </Link>
                    </div>
                  </div>
                ))}
                <div className="item-more mt-2">
                  <Link href="/genres" className="small text-gray-400 hover:text-white transition-colors text-sm">
                    Xem th√™m
                  </Link>
                </div>
              </div>
            </div>

            {/* B√¨nh lu·∫≠n m·ªõi */}
            <div className="it-col this-05">
              <div className="comm-title line-center mb-4">
                <BoltIcon className="h-5 w-5 text-blue-400 mr-2" />
                <span className="text-lg font-bold text-white">B√¨nh lu·∫≠n m·ªõi</span>
              </div>
              <div className="release-list">
                <div id="latest-comment" className="comment-slide-wrapper">
                  <div className="swiper swiper-initialized swiper-vertical sw-comment-slide overflow-hidden" style={{ height: '280px' }}>
                    <div 
                      className="swiper-wrapper transition-transform duration-300"
                      style={{ transform: `translate3d(0px, -${currentLatestCommentIndex * 71.5}px, 0px)` }}
                    >
                      {mockLatestComments.map((comment, index) => (
                        <div 
                          key={comment.id}
                          className="swiper-slide mb-1"
                          style={{ height: '67.5px' }}
                          data-swiper-slide-index={index}
                        >
                          <Link 
                            className="re-item flex items-center space-x-3 p-2 rounded hover:bg-gray-800/50 transition-colors"
                            href={`/phim/${comment.movie.slug}`}
                          >
                            <div className="user-avatar w-10 h-10 flex-shrink-0">
                              <Image
                                alt={comment.user.name}
                                src={comment.user.avatar}
                                width={40}
                                height={40}
                                className="rounded-full object-cover"
                              />
                            </div>
                            <div className="user-comment flex-1 min-w-0">
                              <div className="user-name line-center gr-free flex items-center mb-1">
                                <span className="text-white text-xs font-medium mr-1">{comment.user.name}</span>
                                {comment.user.badge === 'infinity' ? (
                                  <span className="text-blue-400 text-xs">‚àû</span>
                                ) : (
                                  <>
                                    {comment.user.gender === 'female' && (
                                      <span className="text-pink-400 text-xs">‚ôÄ</span>
                                    )}
                                    {comment.user.gender === 'male' && (
                                      <span className="text-blue-400 text-xs">‚ôÇ</span>
                                    )}
                                  </>
                                )}
                              </div>
                              <div className="subject">
                                <div className="lim-1 text-gray-300 text-xs line-clamp-1">
                                  {comment.content}
                                </div>
                              </div>
                            </div>
                            <div className="for line-center gap-1 flex items-center text-xs text-gray-400">
                              <PlayIcon className="h-3 w-3 mr-1" />
                              <span className="lim-1 line-clamp-1">{comment.movie.title}</span>
                            </div>
                          </Link>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
